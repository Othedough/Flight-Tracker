Archived code snippets

from_input method for flightGroupClass

@classmethod
    def from_input(cls):
        # from_input is an alternative constructor that allows the user to populate an instance of the class with input 
        # as opposed to instatiating it inline as one normally would. " instanceVariable = FlightGroup.from_input " 
        # For more detail on this process refer to file "Methods - Class, Static, Regular" from the notes included 
        
        # Following loop generates the list "origins" to be passed into 
        temp = []
        while input("Add travelers in this Group? y/n: ") != 'n': # this loop is the piece that allows the user to input multiple airports as origins
            temp.append([input("Enter departing Airport Code:  "), input("How many travelers will be departing from this airport:  ")])
        
        #Returns the necessary arguments to instantiate the class instance
        return cls(
            input("Enter destination Airport Code:  "),
            # Currently the following three do nothing so we are going to automatically pass a useless integer in. 
            #input("Enter the Date you would like to depart:   "),
            "December 10th",
            #input("Enter the Date you would like to return:   "),
            "December 20th",
            #input("How many days would you like to stay:    "),
            10,
            temp
        )


from_file method for flightGroupClass
    @classmethod
    def from_file(cls):
        with open('flightGroupData.pkl', 'rb') as FGhandler:
            a = pickle.load(FGhandler)
            print("\n")
            return a


A unit test for the from_file method that used to be included in flightGroupClassMk2

def test_from_file(self):
        result = flightGroupClassMk2.flightGroup.from_file()
        self.assertIsInstance(result.destination, str)
        self.assertIsInstance(result.departDate, str)
        self.assertIsInstance(result.returnDate, str)
        self.assertIsInstance(result.stayRange, int)
     
        self.assertIsInstance(result, flightGroupClassMk2.flightGroup)

        # Currently this will only work if the pkl file is not empty
        # I should later add a check to make certain that the file isnt empty before checking